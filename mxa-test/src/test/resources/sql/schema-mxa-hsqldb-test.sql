-- LOG TABLE
CREATE TABLE LOG(
	ID 			INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  	MESSAGEID 	INTEGER,
  	TIME 		TIMESTAMP 		NOT NULL,	
  	LOGTYPE 	VARCHAR(50) 	NOT NULL,
  	LOGMSG 		VARCHAR(1024)	NOT NULL
);

-- CONTACTINFO TABLE
CREATE TABLE CONTACTINFO(
  	ID 			INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  	MESSAGEID 	INTEGER 		NOT NULL,
  	TYPE 		VARCHAR(10) 	NOT NULL,
  	ADDRESS 	VARCHAR(200)	NOT NULL
);

-- MESSAGE TABLE
CREATE TABLE MESSAGE(
  	ID 					INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  	MESSAGEKEY 			VARCHAR(80) 	NOT NULL,
  	SENDINGSYSTEM 		VARCHAR(15) 	NOT NULL,
  	BATCHSENDING 		INTEGER 		NOT NULL,
  	DOMAIN 				VARCHAR(10) 	NOT NULL,
  	CASEDESCRIPTION 	VARCHAR(50),
  	CASEOFFICER 		VARCHAR(50),
  	PARTICIPANTID 		VARCHAR(11) 	NOT NULL,
  	MESSAGEREFERENCE	VARCHAR(40) 	NOT NULL,
  	IDPROC 				VARCHAR(40) 	NOT NULL,
  	DUEDATE 			DATE,
  	ALTINNARCHIVE 		VARCHAR(50),
  	MESSAGEHEADER 		VARCHAR(128)	NOT NULL,
  	MESSAGESUMMARY 		VARCHAR(512) 	NOT NULL,
  	SENTALTINN 			INTEGER 		NOT NULL,
  	SENTALTINNDATE 		TIMESTAMP,
  	MSG_STATUS 			INTEGER 		NOT NULL,
  	READDEADLINE 		DATE 			NOT NULL,
  	OVERDUENOTICESENT 	INTEGER 		NOT NULL
);

-- KEYVALUES TABLE
CREATE TABLE KEYVALUES(
	ID 				INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  	KEY_NAME		VARCHAR(20) 	NOT NULL,
  	DATEVALUE 		DATE,
  	NUMERICVALUE	INTEGER,
  	STRINGVALUE 	VARCHAR(1020),
  	DESCRIPTION 	VARCHAR(255)
);

-- ATTACHMENT TABLE
CREATE TABLE ATTACHMENT(
	ID 				INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  	MESSAGEID 		INTEGER 		NOT NULL,
  	ATTACHMENT 		VARCHAR(1024) 	NOT NULL,
  	MIMETYPE 		VARCHAR(255) 	NOT NULL,
  	FILENAME 		VARCHAR(50) 	NOT NULL,
  	NAME 			VARCHAR(50) 	NOT NULL
);

-- SEQUENCES
CREATE SEQUENCE MESSAGE_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE ATTACHMENT_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE CONTACTINFO_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE KEYVALUES_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE LOG_SEQ
START WITH 1
INCREMENT BY 1;

-- QRTZ TABLES
-- QRTZ_JOB_DETAILS TABLE
CREATE TABLE QRTZ_JOB_DETAILS(
  	JOB_NAME           VARCHAR(255)    	NOT NULL,
  	JOB_GROUP          VARCHAR(255) 	NOT NULL,
  	DESCRIPTION        VARCHAR(255),
  	JOB_CLASS_NAME     VARCHAR(255)		NOT NULL,
  	IS_DURABLE         VARCHAR(20)      NOT NULL,
  	IS_VOLATILE        VARCHAR(20)      NOT NULL,
  	IS_STATEFUL        VARCHAR(20)      NOT NULL,
  	REQUESTS_RECOVERY  VARCHAR(20)      NOT NULL,
  	JOB_DATA           VARCHAR(1000)
);

-- QRTZ_JOB_LISTENERS TABLE
CREATE TABLE QRTZ_JOB_LISTENERS(
  JOB_NAME      VARCHAR(255)    NOT NULL,
  JOB_GROUP     VARCHAR(255)    NOT NULL,
  JOB_LISTENER  VARCHAR(255)    NOT NULL
);

-- QRTZ_TRIGGERS TABLE
CREATE TABLE QRTZ_TRIGGERS(
  TRIGGER_NAME    VARCHAR(255)  NOT NULL,
  TRIGGER_GROUP   VARCHAR(255)  NOT NULL,
  JOB_NAME        VARCHAR(255)  NOT NULL,
  JOB_GROUP       VARCHAR(255)  NOT NULL,
  IS_VOLATILE     VARCHAR(20)	NOT NULL,
  DESCRIPTION     VARCHAR(255),
  NEXT_FIRE_TIME  INTEGER,
  PREV_FIRE_TIME  INTEGER,
  PRIORITY        INTEGER,
  TRIGGER_STATE   VARCHAR(20)	NOT NULL,
  TRIGGER_TYPE    VARCHAR(20)   NOT NULL,
  START_TIME      INTEGER       NOT NULL,
  END_TIME        INTEGER,
  CALENDAR_NAME   VARCHAR(255),
  MISFIRE_INSTR   INTEGER,
  JOB_DATA        VARCHAR(1000)
);

-- QRTZ_SIMPLE_TRIGGERS TABLE
CREATE TABLE QRTZ_SIMPLE_TRIGGERS(
  TRIGGER_NAME     VARCHAR(255)		NOT NULL,
  TRIGGER_GROUP    VARCHAR(255)   	NOT NULL,
  REPEAT_COUNT     INTEGER         	NOT NULL,
  REPEAT_INTERVAL  INTEGER          NOT NULL,
  TIMES_TRIGGERED  INTEGER          NOT NULL
);

-- QRTZ_CRON_TRIGGERS TABLE
CREATE TABLE QRTZ_CRON_TRIGGERS(
  TRIGGER_NAME     VARCHAR(255)	NOT NULL,
  TRIGGER_GROUP    VARCHAR(255) NOT NULL,
  CRON_EXPRESSION  VARCHAR(255) NOT NULL,
  TIME_ZONE_ID     VARCHAR(255)
);

-- QRTZ_BLOB_TRIGGERS TABLE
CREATE TABLE QRTZ_BLOB_TRIGGERS(
  TRIGGER_NAME   VARCHAR(255)   NOT NULL,
  TRIGGER_GROUP  VARCHAR(255)	NOT NULL,
  BLOB_DATA      VARCHAR(1000)
);

-- QRTZ_TRIGGER_LISTENERS TABLE
CREATE TABLE QRTZ_TRIGGER_LISTENERS(
  TRIGGER_NAME      VARCHAR(255)	NOT NULL,
  TRIGGER_GROUP     VARCHAR(255)    NOT NULL,
  TRIGGER_LISTENER  VARCHAR(255)    NOT NULL
);

-- QRTZ_CALENDARS TABLE
CREATE TABLE QRTZ_CALENDARS(
  CALENDAR_NAME  VARCHAR(255)	NOT NULL,
  CALENDAR       VARCHAR(1000)  NOT NULL
);

-- QRTZ_PAUSED_TRIGGER_GRPS TABLE
CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS(
  TRIGGER_GROUP  VARCHAR(255)   NOT NULL
);

-- QRTZ_FIRED_TRIGGERS TABLE
CREATE TABLE QRTZ_FIRED_TRIGGERS(
  ENTRY_ID           VARCHAR(255)	NOT NULL,
  TRIGGER_NAME       VARCHAR(255)  	NOT NULL,
  TRIGGER_GROUP      VARCHAR(255)  	NOT NULL,
  IS_VOLATILE        VARCHAR(20)  	NOT NULL,
  INSTANCE_NAME      VARCHAR(255)  	NOT NULL,
  FIRED_TIME         INTEGER       	NOT NULL,
  PRIORITY           INTEGER        NOT NULL,
  STATE              VARCHAR(20)   	NOT NULL,
  JOB_NAME           VARCHAR(255),
  JOB_GROUP          VARCHAR(255),
  IS_STATEFUL        VARCHAR(20),
  REQUESTS_RECOVERY  VARCHAR(20)
);

-- QRTZ_SCHEDULER_STATE TABLE
CREATE TABLE QRTZ_SCHEDULER_STATE(
  INSTANCE_NAME      VARCHAR(255)	NOT NULL,
  LAST_CHECKIN_TIME  INTEGER        NOT NULL,
  CHECKIN_INTERVAL   INTEGER        NOT NULL
);

-- QRTZ_LOCKS TABLE
CREATE TABLE QRTZ_LOCKS(
  LOCK_NAME  VARCHAR(255) NOT NULL
);
